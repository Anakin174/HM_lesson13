---
- name: create 2 instances
  hosts: localhost
  gather_facts: False
  vars:
    keypair: my-key
    instance_type: t2.micro
    security_group: Open
    image: ami-0bbe28eb2173f6167
    region: us-east-2
 #   subnetid: vpc-ea13c881

  tasks:

      - name: create key pair
        ec2_key: "name=my-key key_material={{ item }} region={{ region }}"
        with_file: ~/.ssh/id_rsa.pub

      - name: add build instance
        ec2:
          key_name: "{{ keypair }}"
          group: "{{ security_group }}"
          instance_type: "{{ instance_type }}"
          image: "{{ image }}"
          instance_tags: { Name: build, type: build, env: build }
          wait: true
          region: "{{ region }}"
 #         vpc_subnet_id: "{ subnetid }"
 #         assign_public_ip: yes
        register: ec2

      - name: Add build node to host group
        add_host: hostname={{ item.public_ip }} group=build
        loop: "{{ ec2.instances }}"

      - name: wait for ssh server to be running
        wait_for: host={{ item.public_dns_name }} port=22 search_regex=OpenSSH
        with_items: "{{ ec2.tagged_instances }}"
        when: item.public_dns_name is defined

      - name: add prode instance
        ec2:
          key_name: "{{ keypair }}"
          group: "{{ security_group }}"
          instance_type: "{{ instance_type }}"
          image: "{{ image }}"
          instance_tags: { Name: prod, type: prod, env: prod }
          wait: true
          region: "{{ region }}"
    #      vpc_subnet_id: "{ subnetid }"
   #       assign_public_ip: yes
        register: ec2

      - name: Add 2s node to host group
        add_host: hostname={{ item.public_ip }} group=prod
        loop: "{{ ec2.instances }}"

      - name: wait for ssh server to be running
        wait_for: host={{ item.public_dns_name }} port=22 search_regex=OpenSSH
        with_items: "{{ ec2.tagged_instances }}"
        when: item.public_dns_name is defined

- name: build project
  hosts: build
  become: yes
  vars:
    ansible_python_interpreter: /usr/bin/python3
  roles:
    - build

- name: deploy to prod
  hosts: prod
  become: yes
  vars:
    ansible_python_interpreter: /usr/bin/python3
  roles:
    - prod